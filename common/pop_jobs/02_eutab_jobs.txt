###################
# Specialist Jobs
###################

# Master Biologist
eutab_master_bio = {
	category = specialist
	condition_string = SPECIALIST_JOB_TRIGGER
	building_icon = building_eutab_adaptation_lab
	clothes_texture_index = 3

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_specialist_job
	possible = {
		complex_specialist_job_check_trigger = yes
	}

	resources = {
		category = planet_eutab_master_bio
		produces = {
			society_research = 10
			exotic_gases = 1
		}
		upkeep = {
			consumer_goods = 2
			minerals = 4
		}
	}

	weight = {
		weight = @specialist_job_weight
		mult = value:job_weights_research_modifier|JOB|eutab_master_bio|
		mult = value:job_weights_modifier|JOB|eutab_master_bio|RESOURCE|exotic_gases|
		modifier = {
			factor = 0.2
			has_citizenship_rights = no
			NOT = { has_trait = trait_mechanical }
		}
		modifier = {
			factor = 2
			has_living_standard = { type = living_standard_academic_privilege }
		}
		modifier = {
			factor = 0.1
			can_take_servant_job = yes
		}
		modifier = {
			factor = 1.5
			has_job = eutab_master_bio
		}
		modifier = {
			factor = 0.8
			is_enslaved = yes
			has_slavery_type = { type = slavery_indentured }
		}
	}
}

# Minor Noble
eutab_minor_noble = {
	category = specialist
	condition_string = SPECIALIST_JOB_TRIGGER
	building_icon = building_eutab_imperial_residence
	clothes_texture_index = 1

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_specialist_job
	possible = {
		complex_specialist_job_check_trigger = yes
	}

	resources = {
		category = planet_eutab_minor_noble
		produces = {
			unity = 3
		}
		upkeep = {
			consumer_goods = 1.5
		}
	}

	planet_modifier = {
		planet_jobs_worker_produces_mult = 0.01
		planet_jobs_slave_produces_mult = 0.01
	}

	country_modifier = {
		country_naval_cap_add = 2
	}

	weight = {
		weight = @specialist_job_weight
		mult = value:job_weights_modifier|JOB|eutab_minor_noble|RESOURCE|unity|
		modifier = {
			factor = 0.2
			has_citizenship_rights = no
			NOT = { has_trait = trait_mechanical }
		}
		modifier = {
			factor = 0.1
			can_take_servant_job = yes
		}
		modifier = {
			factor = 1.5
			has_job = eutab_minor_noble
		}
	}
}

# Gladiator
eutab_gladiator = {
	category = specialist
	condition_string = SPECIALIST_JOB_TRIGGER
	building_icon = building_eutab_wargame
	clothes_texture_index = 3

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible = {
		battle_thrall_job_check_trigger = yes
	}

	resources = {
		category = planet_eutab_gladiator
		upkeep = {
			alloys = 0.5
			consumer_goods = 0.5
		}
	}

	triggered_planet_modifier = {
		potential = {
			always = yes
		}
		planet_amenities_add = 8
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	country_modifier = {
		country_naval_cap_add = 3
	}

	pop_modifier = {
		pop_defense_armies_add = 2
	}

	weight = {
		weight = @specialist_job_weight
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
		modifier = {
			factor = 0.1
			has_ethic = ethic_pacifist
			NOT = { has_job = duelist }
		}
		modifier = {
			factor = 0.2
			has_citizenship_rights = no
			NOT = { has_trait = trait_mechanical }
		}
		modifier = {
			factor = 10
			is_enslaved = yes
			has_slavery_type = { type = slavery_military }
		}
		modifier = {
			factor = 1.20
			has_ethic = ethic_militarist
		}
		modifier = {
			factor = 1.5
			has_job = duelist
		}
		# modifier = { # Script values should handle jobs weights by itself, and AI already depriorities jobs that produces amenties if it has too many anyway
		# 	factor = 0.5
		# 	NOT = { has_job = duelist }
		# 	exists = planet
		# 	planet = {
		# 		free_amenities > 5
		# 	}
		# }
		modifier = {
			factor = 1.1
			has_trait = trait_cybernetic
		}
		modifier = {
			factor = 2
			has_trait = trait_presapient_earthbound
		}
		modifier = {
			factor = 1.1
			has_trait = trait_limited_regeneration
		}
		modifier = {
			factor = 0
			species = { can_be_soldier = no }
		}
		modifier = {
			factor = 2
			has_trait = trait_lithoid
		}
		modifier = {
			factor = 2
			has_trait = trait_resilient
		}
		modifier = {
			factor = 2
			has_trait = trait_very_strong
		}
		modifier = {
			factor = 1.5
			has_trait = trait_strong
		}
		modifier = {
			factor = 0.5
			has_trait = trait_weak
		}
	}
}

# Xenoanthropologist
eutab_anthro = {
	category = specialist
	condition_string = SPECIALIST_JOB_TRIGGER
	building_icon = building_eutab_xeno_district
	clothes_texture_index = 3

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_specialist_job

	resources = {
		category = planet_eutab_anthro
		produces = {
			unity = 4
			society_research = 3
		}
		upkeep = {
			consumer_goods = 3
		}
	}

	triggered_planet_modifier = {
		potential = {
			always = yes
		}
		trade_value_add = 3
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_trade_mult|
	}

	weight = {
		weight = @specialist_job_weight
		mult = value:job_weights_research_modifier|JOB|eutab_anthro|
		mult = value:job_weights_modifier|JOB|eutab_anthro|RESOURCE|unity|
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_trade_mult|
		modifier = {
			factor = 0.2
			has_citizenship_rights = no
			NOT = { has_trait = trait_mechanical }
		}
		modifier = {
			factor = 2
			has_living_standard = { type = living_standard_academic_privilege }
		}
		modifier = {
			factor = 0.1
			can_take_servant_job = yes
		}
		modifier = {
			factor = 1.5
			has_job = eutab_anthro
		}
	}
}

# Park Ranger
eutab_ranger = {
	category = specialist
	condition_string = SPECIALIST_JOB_TRIGGER
	building_icon = building_eutab_eco_preserve
	clothes_texture_index = 3

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_specialist_job

	resources = {
		category = planet_eutab_ranger
		produces = {
			unity = 3
		}
	}

	triggered_planet_modifier = {
		potential = {
			always = yes
		}
		trade_value_add = 3
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_trade_mult|
	}

	triggered_planet_modifier = {
		potential = {
			always = yes
		}
		planet_amenities_add = 3
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	weight = {
		weight = @specialist_job_weight
		mult = value:job_weights_modifier|JOB|eutab_ranger|RESOURCE|unity|
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_trade_mult|
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
		modifier = {
			factor = 0.2
			has_citizenship_rights = no
			NOT = { has_trait = trait_mechanical }
		}
		modifier = {
			factor = 1.5
			has_job = eutab_ranger
		}
		modifier = {
			factor = 0.1
			can_take_servant_job = yes
		}
	}
}

# Street Judge
eutab_judge = {
	category = specialist
	condition_string = SPECIALIST_JOB_TRIGGER
	building_icon = building_precinct_house
	clothes_texture_index = 5

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_specialist_job

	resources = {
		category = planet_enforcers
		produces = {
			unity = 3
		}
		upkeep = {
			alloys = 0.5
		}
		produces = {
			trigger = {
				exists = owner
				owner = { has_valid_civic = civic_police_state }
			}
			unity = 2
		}
		upkeep = {
			trigger = {
				exists = planet
				planet = { has_modifier = anticrime_campaign }
			}
			energy = 2
		}
	}

	pop_modifier = {
		pop_defense_armies_add = 3
	}

	planet_modifier = {
		planet_crime_add = -35
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_active_tradition = tr_domination_judgment_corps }
		}
		modifier = {
			planet_crime_add = -5
		}
	}

	triggered_planet_modifier = {
		potential = {
			planet = { has_modifier = anticrime_campaign }
		}
		modifier = {
			planet_crime_add = -10
		}
	}

	weight = {
		weight = @specialist_job_weight
		mult = value:job_weights_modifier|JOB|eutab_judge|RESOURCE|unity|
		modifier = {
			factor = 10
			has_job = enforcer
		}
		modifier = {
			factor = 10
			planet = { planet_crime > 35 }
			NOT = { has_job = eutab_judge }
		}
		modifier = {
			factor = 0.01
			planet = { planet_crime <= 35 }
			NOT = { has_job = eutab_judge }
		}
		modifier = {
			factor = 0.2
			has_citizenship_rights = no
			NOT = { has_trait = trait_mechanical }
		}
		modifier = {
			factor = 2
			has_trait = trait_resilient
		}
		modifier = {
			factor = 2
			has_trait = trait_very_strong
		}
		modifier = {
			factor = 1.5
			has_trait = trait_strong
		}
		modifier = {
			factor = 10
			is_enslaved = yes
			has_slavery_type = { type = slavery_military }
		}
		modifier = {
			factor = 0.50
			has_trait = trait_weak
		}
		modifier = {
			factor = 0.1
			can_take_servant_job = yes
		}
		modifier = {
			factor = 1.1
			has_trait = trait_cybernetic
		}
		modifier = {
			factor = 2
			has_trait = trait_presapient_earthbound
		}
		modifier = {
			factor = 1.1
			has_trait = trait_limited_regeneration
		}
		modifier = {
			factor = 0.8
			is_enslaved = yes
			has_slavery_type = { type = slavery_indentured }
		}
		modifier = {
			factor = 2
			has_trait = trait_lithoid
		}
	}
}

# Siphon Drone
eutab_siphon = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_eutab_dm_siphon

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}
	
	possible_precalc = can_fill_drone_job

	resources = {
		category = planet_refiners
		produces = {
			sr_dark_matter = 2
		}
		upkeep = {
			alloys = 6
			volatile_motes = 0.5
			rare_crystals = 0.5
			exotic_gases = 0.5
		}
	}

	weight = {
		weight = @complex_drone_job_weight
		mult = value:job_weights_modifier|JOB|eutab_siphon|RESOURCE|sr_dark_matter|
	}
}

# Caretaker Drones
eutab_caretaker = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_eutab_hive_alpha_node

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job

	resources = {
		category = planet_eutab_caretaker
		produces = {
			unity = 4
		}
		upkeep = {
			energy = 2
			minerals = 1.5
		}
	}

	planet_modifier = {
		planet_jobs_complex_drone_produces_mult = 0.01
		
	}

	triggered_planet_modifier = {
		potential = {
			planet = { has_modifier = planet_artifact_relays_machine }
		}
		modifier = {
			planet_stability_add = 2
			planet_jobs_simple_drone_produces_mult = 0.01
		}
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				has_active_tradition = tr_synchronicity_integrated_preservation
			}
		}
		modifier = {
			planet_crime_no_happiness_add = -2
		}
	}

	pop_modifier = {
		pop_defense_armies_add = 1
	}

	weight = {
		weight = @synapse_drone_job_weight
		mult = value:job_weights_modifier|JOB|eutab_caretaker|RESOURCE|unity|
	}
}

# Genetic Chronicler
eutab_genetic_chronicler = {
	category = ruler
	condition_string = RULER_JOB_TRIGGER
	building_icon = building_eutab_genetic_data_vault
	clothes_texture_index = 1

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_ruler_job

	resources = {
		category = planet_researchers
		produces = {
			society_research = 6
		}
	}

	planet_modifier = {
		planet_jobs_society_research_produces_mult = 0.05
	}

	triggered_planet_modifier = {
		potential = {
			always = yes
		}
		planet_amenities_add = 1
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	weight = {
		weight = @specialist_job_weight
		mult = value:job_weights_research_modifier|JOB|eutab_genetic_chronicler|
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
		modifier = {
			factor = 0.2
			has_citizenship_rights = no
			NOT = { has_trait = trait_mechanical }
		}
		modifier = {
			factor = 5
			has_job = eutab_genetic_chronicler
		}
		modifier = {
			factor = 2
			has_living_standard = { type = living_standard_academic_privilege }
		}
		modifier = {
			factor = 0.01
			exists = planet
			exists = planet.controller
			planet.controller = {
				OR = {
					is_country_type = swarm
					is_country_type = ai_empire
				}
			}
		}
	}
}

eutab_shroud_lord = {
	category = ruler
	condition_string = RULER_JOB_TRIGGER
	building_icon = building_eutab_imperial_seat
	clothes_texture_index = 1

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_ruler_job
	possible = {
		OR = {
			has_trait = trait_latent_psionic
			has_trait = trait_psionic
		}
	}

	resources = {
		category = planet_priests
		produces = {
			unity = 4
			sr_zro = 0.1
		}
	}

	planet_modifier = {
		planet_jobs_slave_produces_mult = 0.05
	}

	weight = {
		weight = @ruler_job_weight
		mult = value:job_weights_modifier|JOB|eutab_shroud_lord|RESOURCE|unity|
		mult = value:job_weights_modifier|JOB|eutab_shroud_lord|RESOURCE|sr_zro|
		modifier = {
			factor = 0.1
			has_citizenship_rights = no
			NOT = { has_trait = trait_mechanical }
		}
		modifier = {
			factor = 1.2
			has_ethic = ethic_spiritualist
		}
		modifier = {
			factor = 5
			has_job = eutab_shroud_lord
		}
		# crisis purge
		modifier = {
			factor = 0.01
			exists = planet
			exists = planet.controller
			planet.controller = {
				OR = {
					is_country_type = swarm
					is_country_type = ai_empire
				}
			}
		}
	}
}
